<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<comment>
		myPlan Mapper
	 </comment>
	
	<entry key="selectCommunityList">
		    SELECT
	            COM.COMMUNITY_NO,
	            C.CITY_NAME,
	             M.NICKNAME,
	           COM.COMMUNITY_CONTENT,
	            COM.COMMUNITY_DATE,
	            COM.COUNT,
	        	 COM.STATUS
	            
        
           FROM TB_COMMUNITY COM
            JOIN TB_CITY C ON COM.CITY_NO = C.CITY_NO
            JOIN MEMBER M ON  COM.MEMBER_NO = M.MEM_NO
            
            WHERE
                COM.STATUS = 'Y'

	</entry>
	
	<entry key="increaseCount">
		UPDATE
			  TB_COMMUNITY
		   SET
		  	  COUNT = COUNT + 1
	  	 WHERE
	  	 	  COMMUNITY_NO = ?
 	 	   AND
 	 	   	  STATUS = 'Y'
	
	
	
	
	
	
	</entry>
	
	<entry key="selectCommunity">
		SELECT
		    COM.COMMUNITY_NO,
		    C.CITY_NAME,
			 M.NICKNAME,
		   COM.COMMUNITY_CONTENT,
		    COM.COMMUNITY_DATE,
		    COM.COUNT,
		     COM.MEMBER_NO,
		    COM.STATUS
		    
		
		   FROM TB_COMMUNITY COM
		    JOIN TB_CITY C ON COM.CITY_NO = C.CITY_NO
		    JOIN MEMBER M ON  COM.MEMBER_NO = M.MEM_NO
		    
    WHERE  COM.STATUS='Y' AND COM.COMMUNITY_NO=?
		
	
	
	</entry>
	
	
	<entry key="selectTitleCount">
	SELECT
		     COUNT(*) COUNT
		 FROM
		     TB_PLAN
		WHERE    
		     NOTICE_TITLE LIKE '%' || ? || '%'
		  AND
		     STATUS = 'Y'
	
	
	
	
	</entry>
	
	
	<entry key="selectContentCount">
		SELECT
		     COUNT(*) COUNT
		 FROM
		     TB_PLAN
		WHERE    
		     NOTICE_TITLE LIKE '%' || ? || '%'
		  AND
		     STATUS = 'Y'
	
	</entry>
	
	<entry key="selectCount">
	
		SELECT
	     	  COUNT(*) COUNT
	 	  FROM
	     	  TB_PLAN
		 WHERE
	     	  STATUS = 'Y'
	
	
	
	</entry>
	  SELECT Z.*, ROWNUM RNUM
    FROM (
    
    	SELECT
		      D.PLAN_NO,
		      TO_CHAR(S_DATE, 'MM"월 "DD"일 출발"') START_DATE,
		      TO_CHAR(E_DATE, 'MM"월 "DD"일 도착"') END_DATE,
		      FLOOR(E_DATE - S_DATE) || '박' || CEIL(E_DATE - S_DATE) || '일' AS TRAVEL_DATE,
		      'D-' || FLOOR(S_DATE - SYSDATE) AS D_DAY,
		      SUBSTR(SUBSTR(CITYS, 1, INSTR(CITYS, '-', -1) -1), INSTR(CITYS, '-') + 1) PLAN_CITYS,
		      REPLACE(TO_CHAR(SUM_PRICE), SUBSTR(TO_CHAR(SUM_PRICE), -4), '만') TOTAL_PRICE, 
		      TO_CHAR(P.UPLOAD_DATE, 'YYYY"년" MM"월" DD"일" "작성/수정"') AS UPLOAD_DATE
		 FROM
		      TB_DESTINATION D,
		      (SELECT PLAN_NO,
		              MIN(RETURN_DATE) OVER(PARTITION BY PLAN_NO) AS S_DATE
		         FROM TB_DESTINATION     
		        ORDER
		           BY RETURN_DATE NULLS LAST) SD,
		      (SELECT PLAN_NO,
		              MAX(ARRIVAL) OVER(PARTITION BY PLAN_NO) AS E_DATE
		         FROM TB_DESTINATION     
		        ORDER
		           BY ARRIVAL DESC NULLS LAST) ED,
		      TB_PLAN P,
		      (SELECT PLAN_NO,
		              SUBSTR(XMLAGG(
		                    XMLELEMENT(COL ,'-', CITY_NAME) ORDER BY DEST_NO).EXTRACT('//text()'
		                    ).GETSTRINGVAL(), 2) AS CITYS
		         FROM TB_DESTINATION
		         JOIN TB_CITY USING(CITY_NO)
		        GROUP
		           BY PLAN_NO) C,
		      (SELECT PLAN_NO,
		              SUM(TRANS_PRICE),
		              SUM(TRANS_PRICE) + SUM(S_COST) AS SUM_PRICE
		         FROM TB_DESTINATION
		         LEFT
		         JOIN (SELECT DEST_NO,
		                      SUM(SCHED_COST) S_COST
		                 FROM TB_SCHEDULE
		                GROUP 
		                   BY DEST_NO) USING(DEST_NO)
		        GROUP
		           BY PLAN_NO) S
		 WHERE D.PLAN_NO = SD.PLAN_NO
		   AND D.PLAN_NO = ED.PLAN_NO
		   AND D.PLAN_NO = P.PLAN_NO
		   AND D.PLAN_NO = C.PLAN_NO
		   AND D.PLAN_NO = S.PLAN_NO
		   AND MEM_NO = 7
		   AND P.STATUS = 'Y'
		 GROUP
		    BY D.PLAN_NO, S_DATE, E_DATE, CITYS, UPLOAD_DATE, SUM_PRICE
		 ORDER
		    BY D.PLAN_NO     
            
            ) Z
	
	
</properties>
