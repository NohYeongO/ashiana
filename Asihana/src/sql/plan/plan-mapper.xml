<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<comment>
		Plan Mapper
	</comment>

	<entry key="selectPlanList">
		SELECT
		      D.PLAN_NO,
		      TO_CHAR(S_DATE, 'MM"월 "DD"일 출발"') START_DATE,
		      TO_CHAR(E_DATE, 'MM"월 "DD"일 도착"') END_DATE,
		      FLOOR(E_DATE - S_DATE) || '박' || CEIL(E_DATE - S_DATE) || '일' AS TRAVEL_DATE,
		      'D-' || FLOOR(S_DATE - SYSDATE) AS D_DAY,
		      SUBSTR(SUBSTR(CITYS, 1, INSTR(CITYS, '-', -1) -1), INSTR(CITYS, '-') + 1) PLAN_CITYS,
		      REPLACE(TO_CHAR(SUM_PRICE), SUBSTR(TO_CHAR(SUM_PRICE), -4), '만') TOTAL_PRICE, 
		      TO_CHAR(P.UPLOAD_DATE, 'YYYY"년" MM"월" DD"일" "작성/수정"') AS UPLOAD_DATE
		  FROM
		      TB_DESTINATION D,
		      (SELECT PLAN_NO,
		              MIN(RETURN_DATE) OVER(PARTITION BY PLAN_NO) AS S_DATE
		         FROM TB_DESTINATION     
		        ORDER
		           BY RETURN_DATE NULLS LAST) SD,
		      (SELECT PLAN_NO,
		              MAX(ARRIVAL) OVER(PARTITION BY PLAN_NO) AS E_DATE
		         FROM TB_DESTINATION     
		        ORDER
		           BY ARRIVAL DESC NULLS LAST) ED,
		      TB_PLAN P,
		      (SELECT PLAN_NO,
		              SUBSTR(XMLAGG(
		                    XMLELEMENT(COL ,'-', CITY_NAME) ORDER BY DEST_NO).EXTRACT('//text()'
		                    ).GETSTRINGVAL(), 2) AS CITYS
		         FROM TB_DESTINATION
		         JOIN TB_CITY USING(CITY_NO)
		        GROUP
		           BY PLAN_NO) C,
		      (SELECT PLAN_NO,
		              SUM(TRANS_PRICE) + SUM(SCHED_COST) AS SUM_PRICE
		         FROM TB_DESTINATION
		         JOIN TB_SCHEDULE USING(DEST_NO)
		        GROUP
		           BY PLAN_NO) S
		 WHERE D.PLAN_NO = ED.PLAN_NO
		   AND D.PLAN_NO = SD.PLAN_NO
		   AND D.PLAN_NO = P.PLAN_NO
		   AND D.PLAN_NO = C.PLAN_NO
		   AND D.PLAN_NO = S.PLAN_NO
		   AND MEM_NO = ?
		   AND P.STATUS = 'Y'
		 GROUP
		    BY D.PLAN_NO, S_DATE, E_DATE, CITYS, UPLOAD_DATE, SUM_PRICE
		 ORDER
		    BY D.PLAN_NO     
	</entry>
	
	<entry key="userPlanCheck">
		SELECT
		      COUNT(*)
		  FROM
		      TB_PLAN
		 WHERE
		      MEM_NO = ?
		   AND
		      PLAN_NO = ?
	</entry>
	
	<entry key="selectPlanDetail">
		SELECT
		      P.PLAN_NO,
		      TO_CHAR(S_DATE, 'YYYY-MM-DD') AS START_DATE,
		      TO_CHAR(S_DATE, 'HH24:MI') AS START_TIME,
		      TO_CHAR(E_DATE, 'YYYY-MM-DD') AS END_DATE,
		      TO_CHAR(E_DATE, 'HH24:MI') AS END_TIME,
		      FLOOR(E_DATE - S_DATE) || '박' || CEIL(E_DATE - S_DATE) || '일' AS TRAVEL_DATE,
		      NVL(TO_CHAR(TRANSFER_SUM, 'FM999,999,999,999'), 0) AS TRANS_SUM,
		      NVL(TO_CHAR(SCH_SUM, 'FM999,999,999,999'), 0) AS SCHED_SUM,
		      NVL(TO_CHAR(TRANSFER_SUM + SCH_SUM, 'FM999,999,999,999'), 0) AS TOTAL_SUM
		  FROM
		      TB_PLAN P,
		      (SELECT PLAN_NO,
		              MIN(RETURN_DATE) OVER(PARTITION BY PLAN_NO) AS S_DATE
		         FROM TB_DESTINATION     
		        ORDER
		           BY RETURN_DATE NULLS LAST) SD,
		      (SELECT PLAN_NO,
		              MAX(ARRIVAL) OVER(PARTITION BY PLAN_NO) AS E_DATE
		         FROM TB_DESTINATION     
		        ORDER
		           BY ARRIVAL DESC NULLS LAST) ED,
		      (SELECT PLAN_NO,
		              SUM(TRANS_PRICE) AS TRANSFER_SUM
		         FROM TB_DESTINATION
		        GROUP
		           BY PLAN_NO) TP,
		      (SELECT PLAN_NO,
		              SUM(S_SUM) SCH_SUM
		         FROM TB_DESTINATION
		         JOIN (SELECT DEST_NO,
		                      SUM(SCHED_COST) AS S_SUM
		                 FROM TB_SCHEDULE
		                GROUP 
		                   BY DEST_NO) USING(DEST_NO)
		        GROUP
		           BY PLAN_NO) SS
		 WHERE P.PLAN_NO = SD.PLAN_NO
		   AND P.PLAN_NO = ED.PLAN_NO
		   AND P.PLAN_NO = SS.PLAN_NO
		   AND P.PLAN_NO = ?
		   AND P.STATUS = 'Y'
		 GROUP
		    BY P.PLAN_NO, S_DATE, E_DATE, TRANSFER_SUM, SCH_SUM
		 ORDER
		    BY P.PLAN_NO
	</entry>
	
	<entry key="selectDesDetail">
		SELECT DEST_NO,
		       CITY_NAME || '-' || NATION_NAME AS CITY_NAME,
		       TRANS,
		       TRIP,
		       NVL(TO_CHAR(TRANS_PRICE, 'FM999,999,999,999'), 0) AS TRANS_PRICE,
		       ARRIVAL,
		       RETURN_DATE,
		       CEIL(RETURN_DATE - ARRIVAL) || '박' || (CEIL(RETURN_DATE - ARRIVAL) + 1) || '일' DEST_DATE,
		       NVL(TO_CHAR(SUM_COST, 'FM999,999,999,999'), 0) AS SCHED_COST_SUM
		  FROM TB_DESTINATION
		  LEFT
		  JOIN (SELECT CITY_NO,
		               CITY_NAME,
		               NATION_NAME
		          FROM TB_CITY
		          JOIN TB_NATION USING(NATION_NO)) USING(CITY_NO)
		  LEFT
		  JOIN (SELECT
		              DEST_NO,
		              SUM(SCHED_COST) SUM_COST
		          FROM
		              TB_SCHEDULE
		         GROUP
		            BY
		              DEST_NO) USING(DEST_NO)
		 WHERE PLAN_NO = ?
		   AND STATUS = 'Y'
		 ORDER
		    BY DEST_NO
	</entry>
	
	<entry key="selectSchedule">
	
	</entry>

</properties>
